params {
    runtime_opts = ''
    cellpose_dask_scheduler_port_binding = ''
    cellpose_with_dask = true

    cellpose_process_blocksize = '128,128,128'
    cellpose_model = 'cyto'
    cellpose_min_size = 10
    cellpose_diameter = 30
    cellpose_cellprob_threshold = 1.0
    cellpose_iou_depth = 1
    cellpose_iou_threshold = 0.05

    cellpose_models_dir = './work/cellpose-models'

    cellpose_distributed = true
    cellpose_dask_work_dir = './work/cellpose_dask'
    cellpose_dask_config = './configs/dask_config.yml'

    cellpose_work_dir = ''
    cellpose_dask_workers = 2
    cellpose_required_workers = 1
    cellpose_driver_cpus = 2
    cellpose_driver_mem_gb = 12
    cellpose_worker_cpus = 2
    cellpose_worker_memgb = 10

    cellpose_max_tasks = 0
}

process {

    withName:".*:CELLPOSE_SEGMENTATION:.*" {
        ext.container = 'ghcr.io/janeliascicomp/cellpose:2.2.3-dask2023.10.1-py11'
        containerOptions = params.runtime_opts
    }

    withName:".*:CELLPOSE_SEGMENTATION:.*:DASK_STARTMANAGER" {
        containerOptions = "${params.cellpose_dask_scheduler_port_binding}"

        ext {
            args = [
                "--port 0",
                "--dashboard-address 0",
            ].join(' ')
        }

    }

    withName:CELLPOSE {
        ext {
            args = [
                "--output-blocksize 0,0,0",
                "--process-blocksize ${params.cellpose_process_blocksize}",
                "--model ${params.cellpose_model}",
                "--min_size ${params.cellpose_min_size}",
                "--diam_mean ${params.cellpose_diameter}",
                "--cellprob_threshold ${params.cellpose_cellprob_threshold}",
                "--iou-threshold ${params.cellpose_iou_threshold}",
                "--iou-depth ${params.cellpose_iou_depth}",
            ].join(' ')
        }
    }

}

def arg_value(arg_flag, arg_value) {
    "${arg_flag} ${arg_value}"
}

def bool_arg(arg_flag, arg_value) {
    arg_value ? "${arg_flag}" : ''
}

def optional_arg_value(arg_flag, arg_value) {
    arg_value ? "${arg_flag} ${arg_value}" : ''
}
