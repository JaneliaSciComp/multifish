params {
    runtime_opts = ''
    bigstream_dask_scheduler_port_binding = ''
    bigstream_with_dask = true
    bigstream_dask_work_dir = 'work/dask'
    bigstream_dask_config = '${PWD}/configs/dask_config.yml'

    bigstream_config = '${PWD}/configs/bigstream_config.yml'
    bigstream_fix_mask_descriptor = ''
    bigstream_mov_mask_descriptor = ''

    bigstream_global_steps = ''
    bigstream_local_steps = ''

    bigstream_fix_name = ''
    bigstream_global_fix = ''
    bigstream_global_fix_subpath = ''
    bigstream_global_fix_spacing = ''
    bigstream_global_fix_mask = ''
    bigstream_global_fix_mask_subpath = ''

    bigstream_local_fix = ''
    bigstream_local_fix_subpath = ''
    bigstream_local_fix_spacing = ''
    bigstream_local_fix_mask = ''
    bigstream_local_fix_mask_subpath = ''

    bigstream_mov_name = ''
    bigstream_global_mov = ''
    bigstream_global_mov_subpath = ''
    bigstream_global_mov_spacing = ''
    bigstream_global_mov_mask = ''
    bigstream_global_mov_mask_subpath = ''

    bigstream_local_mov = ''
    bigstream_local_mov_subpath = ''
    bigstream_local_mov_spacing = ''
    bigstream_local_mov_mask = ''
    bigstream_local_mov_mask_subpath = ''

    reuse_global_affine = true
    bigstream_global_output_dir = ''
    bigstream_global_transform_name = 'aff'
    bigstream_global_align_name = 'aff'
    bigstream_global_align_subpath = ''

    bigstream_local_output_dir = ''
    bigstream_local_align_name = 'warped'
    bigstream_local_align_subpath = ''
    bigstream_local_transform_name = ''
    bigstream_local_transform_subpath = ''
    bigstream_local_inv_transform_name = ''
    bigstream_local_inv_transform_subpath = ''
    bigstream_local_transform_spacing = ''

    bigstream_global_align_cpus = 1
    bigstream_global_align_mem_gb = 15
    bigstream_local_align_cpus = 1
    bigstream_local_align_mem_gb = 15

    bigstream_local_align_workers = 1
    bigstream_local_align_worker_threads = 1
    bigstream_local_align_min_workers = 1
    bigstream_local_align_worker_cpus = 1
    bigstream_local_align_worker_mem_gb = 15

    bigstream_additional_deformed_subpaths = ''
    bigstream_additional_deformed_paths = ''

    bigstream_local_blocksize = ''
    bigstream_local_overlap_factor = 0

    bigstream_inv_iterations = 5
    bigstream_inv_order = 2
    bigstream_inv_sqrt_iterations = 5

    bigstream_dask_cluster_max_tasks = 0
}

process {

    withName:"(.*:)?BIGSTREAM_.*" {
        ext.container = 'ghcr.io/janeliascicomp/bigstream:1.3.2-dask2024.4.1-py11'
        containerOptions = "${params.runtime_opts}"
    }

    withName:"(.*:)?BIGSTREAM_.*:DASK_STARTMANAGER" {
        containerOptions = "${params.runtime_opts} ${params.bigstream_dask_scheduler_port_binding}"

        ext {
            args = [
                "--port 0",
                "--dashboard-address 0",
            ].join(' ')
        }
    }

    withName:"(.*:)?BIGSTREAM_.*:DASK_STARTWORKER" {
        ext {
            args = [
                "--nthreads ${params.bigstream_local_align_worker_threads}",
            ].join(' ')
        }
    }

    withName:".*:BIGSTREAM_GLOBALALIGN" {
        ext {
            args = [
                bool_arg('--reuse-existing-transform', params.reuse_global_affine),
                optional_arg_value('--cpus', params.bigstream_global_align_cpus),
            ].join(' ')
        }
    }

    withName:".*:BIGSTREAM_LOCALALIGN" {
        ext {
            args = [
                optional_arg_value('--local-processing-size', params.bigstream_local_blocksize),
                optional_arg_value('--local-processing-overlap-factor', params.bigstream_local_overlap_factor),

                // parameters for generating the inverse transform
                optional_arg_value('--inv-iterations', params.bigstream_inv_iterations),
                optional_arg_value('--inv-order', params.bigstream_inv_order),
                optional_arg_value('--inv-sqrt-iterations', params.bigstream_inv_sqrt_iterations),

                optional_arg_value('--worker-cpus', params.bigstream_local_align_worker_cpus),
                optional_arg_value('--cluster-max-tasks', params.bigstream_dask_cluster_max_tasks),
            ].join(' ')
        }
    }

    withName:".*:BIGSTREAM_DEFORM" {
        ext {
            args = [
                optional_arg_value('--output-blocksize', params.bigstream_local_blocksize),
                optional_arg_value('--blocks-overlap-factor', params.bigstream_local_overlap_factor),

                optional_arg_value('--worker-cpus', params.bigstream_local_align_worker_cpus),
                optional_arg_value('--cluster-max-tasks', params.bigstream_dask_cluster_max_tasks),
            ].join(' ')
        }
    }

}

def arg_value(arg_flag, arg_value) {
    "${arg_flag} ${arg_value}"
}

def bool_arg(arg_flag, arg_value) {
    arg_value ? "${arg_flag}" : ''
}

def optional_arg_value(arg_flag, arg_value) {
    arg_value ? "${arg_flag} ${arg_value}" : ''
}
